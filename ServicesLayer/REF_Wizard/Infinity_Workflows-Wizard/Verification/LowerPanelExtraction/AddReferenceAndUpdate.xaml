<Activity mc:Ignorable="sap sap2010" x:Class="AddReferenceAndUpdate" this:AddReferenceAndUpdate.sSelector="&lt;wnd app='spreviewwizard.exe' ctrlname='SPVContainer' /&gt;&#xA;&lt;wnd ctrlname='pnlMain' /&gt;&#xA;&lt;wnd ctrlname='pnlInputForm' /&gt;&#xA;&lt;wnd ctrlname='UCSPVInputFormNew' /&gt;&#xA;&lt;wnd ctrlname='SplitContainer1' /&gt;&#xA;&lt;wnd aaname='$' cls='WindowsForms10.Window.*' /&gt;&#xA;&lt;wnd cls='WindowsForms10.COMBOBOX.*' /&gt;" this:AddReferenceAndUpdate.sAlternativeSelectorTB="&lt;wnd app='spreviewwizard.exe' ctrlname='SPVContainer' /&gt;&#xA;&lt;wnd ctrlname='pnlMain' /&gt;&#xA;&lt;wnd ctrlname='pnlInputForm' /&gt;&#xA;&lt;wnd ctrlname='UCSPVInputFormNew' /&gt;&#xA;&lt;wnd ctrlname='SplitContainer1' /&gt;&#xA;&lt;wnd aaname='$' cls='WindowsForms10.Window.*' /&gt;&#xA;&lt;wnd cls='WindowsForms10.COMBOBOX.*' /&gt;" this:AddReferenceAndUpdate.sExpectedOutput="11-1111111" this:AddReferenceAndUpdate.sIncorrectSSNEINText="IncorrectEIN" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:this="clr-namespace:" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="sSelector" Type="InArgument(x:String)" />
    <x:Property Name="sAlternativeSelectorTB" Type="InArgument(x:String)" />
    <x:Property Name="sExpectedOutput" Type="InArgument(x:String)" />
    <x:Property Name="sIncorrectSSNEINText" Type="InArgument(x:String)" />
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>1488,4808</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>AddReferenceAndUpdate_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Some elements in verfication wizard needs to add refrence and only after that bot can update values. &#xA;&#xA;Such scenarios are handled here." DisplayName="AddReferenceAndUpdate" sap:VirtualizedContainerService.HintSize="739,4743" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="ui:UiElement" Name="vElement" />
      <Variable x:TypeArguments="x:Boolean" Name="bElementExists" />
      <Variable x:TypeArguments="x:String" Name="sStaticButton" />
      <Variable x:TypeArguments="x:String" Name="sOutput" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsPinned">False</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="True" ContinueOnError="True" DelayMS="2000" DisplayName="reset zoom to 101 to sroll up uppper panel" EmptyField="True" sap:VirtualizedContainerService.HintSize="677,155" sap2010:WorkflowViewState.IdRef="TypeInto_3" Text="101[k(enter)]">
      <ui:TypeInto.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fdc914d1-dd73-433f-9e1c-102010951f24" InformativeScreenshot="9a9004c0f7e08edd966fb8ff7e15f94b" Selector="&lt;wnd app='spreviewwizard.exe' ctrlname='SPVContainer' /&gt;&lt;wnd ctrlname='pnlToolbar' /&gt;&lt;wnd ctrlname='UCSPVToolbar' /&gt;&lt;wnd cls='WindowsForms10.EDIT.*' idx='2' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:TypeInto.Target>
    </ui:TypeInto>
    <ui:UiElementExists DisplayName="Check if Element Exists" Exists="[bElementExists]" sap:VirtualizedContainerService.HintSize="677,87" sap2010:WorkflowViewState.IdRef="UiElementExists_2">
      <ui:UiElementExists.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="77b63ba8-8323-4ad1-85ab-a30b68df2aa4" Selector="[sSelector]" TimeoutMS="5000">
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:UiElementExists.Target>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:UiElementExists>
    <If Condition="[bElementExists]" DisplayName="Find Element with primary and Alternative selector" sap:VirtualizedContainerService.HintSize="677,52" sap2010:WorkflowViewState.IdRef="If_1">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,356" sap2010:WorkflowViewState.IdRef="Sequence_2">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:WaitUiElementAppear WaitActive="{x:Null}" WaitVisible="{x:Null}" ContinueOnError="True" DisplayName="Find Element" FoundElement="[vElement]" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_1">
            <ui:WaitUiElementAppear.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="71ac8e0a-7199-489f-90ec-aa793f710577" Selector="[sSelector]" TimeoutMS="5000">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:WaitUiElementAppear.Target>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:WaitUiElementAppear>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_3" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Element found with primary selector&quot;]" />
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="476,604" sap2010:WorkflowViewState.IdRef="Sequence_3">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:UiElementExists DisplayName="Check if Element Exists" Exists="[bElementExists]" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="UiElementExists_3">
            <ui:UiElementExists.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="77b63ba8-8323-4ad1-85ab-a30b68df2aa4" Selector="[sAlternativeSelectorTB]" TimeoutMS="5000">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:UiElementExists.Target>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:UiElementExists>
          <ui:WaitUiElementAppear WaitActive="{x:Null}" WaitVisible="{x:Null}" ContinueOnError="True" DisplayName="Find Element" FoundElement="[vElement]" sap:VirtualizedContainerService.HintSize="434,87" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_2">
            <ui:WaitUiElementAppear.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="71ac8e0a-7199-489f-90ec-aa793f710577" Selector="[sAlternativeSelectorTB]" TimeoutMS="5000">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:WaitUiElementAppear.Target>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:WaitUiElementAppear>
          <Assign sap:VirtualizedContainerService.HintSize="434,81" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[sSelector]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[sAlternativeSelectorTB]</InArgument>
            </Assign.Value>
          </Assign>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="434,141" sap2010:WorkflowViewState.IdRef="LogMessage_4" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Element found with secondary selector&quot;]" />
        </Sequence>
      </If.Else>
    </If>
    <Assign DisplayName="Get Static button seelctor" sap:VirtualizedContainerService.HintSize="677,82" sap2010:WorkflowViewState.IdRef="Assign_2">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[sStaticButton]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[sSelector.Replace("&lt;wnd cls='WindowsForms10.COMBOBOX.*' /&gt;","").Replace("&lt;wnd cls='WindowsForms10.EDIT.*' /&gt;","").Replace("&lt;wnd cls='Edit' /&gt;","")]</InArgument>
      </Assign.Value>
    </Assign>
    <Assign DisplayName="Get Static button seelctor" sap:VirtualizedContainerService.HintSize="677,82" sap2010:WorkflowViewState.IdRef="Assign_3">
      <Assign.To>
        <OutArgument x:TypeArguments="x:String">[sStaticButton]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="x:String">[sStaticButton+"&lt;wnd cls='WindowsForms10.STATIC.*' /&gt;"]</InArgument>
      </Assign.Value>
    </Assign>
    <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DelayMS="2000" DisplayName="Click on static button" sap:VirtualizedContainerService.HintSize="677,107" sap2010:WorkflowViewState.IdRef="Click_1" KeyModifiers="None" MouseButton="BTN_LEFT">
      <ui:Click.CursorPosition>
        <ui:CursorPosition Position="Center">
          <ui:CursorPosition.OffsetX>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetX>
          <ui:CursorPosition.OffsetY>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:CursorPosition.OffsetY>
        </ui:CursorPosition>
      </ui:Click.CursorPosition>
      <ui:Click.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="115d6daa-8701-4082-85b5-441425dbcb68" InformativeScreenshot="d921d7902b38f88048a07c36a590e00c" Selector="[sStaticButton]" TimeoutMS="5000">
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:Click.Target>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:Click>
    <ui:Click AlterIfDisabled="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DelayBefore="2000" DelayMS="2000" DisplayName="Add refrence in teh upper panel" sap:VirtualizedContainerService.HintSize="677,107" sap2010:WorkflowViewState.IdRef="Click_2" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False">
      <ui:Click.CursorPosition>
        <ui:CursorPosition OffsetX="-150" OffsetY="50" Position="TopRight" />
      </ui:Click.CursorPosition>
      <ui:Click.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="91b336df-9b8b-4929-93da-1a808426ec2f" InformativeScreenshot="822380853f01c9d20c2d3360551c7744" Selector="&lt;wnd app='spreviewwizard.exe' ctrlname='SPVContainer' /&gt;&lt;wnd ctrlname='pnlMain' /&gt;&lt;wnd ctrlname='pnlSourceDoc' /&gt;&lt;wnd ctrlname='UCSPVSourceDoc' /&gt;&lt;wnd ctrlname='PictureBox1' /&gt;" TimeoutMS="5000">
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:Click.Target>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:Click>
    <ui:WaitUiElementAppear WaitActive="{x:Null}" WaitVisible="{x:Null}" ContinueOnError="True" DisplayName="To check status if element is enabled or not ?" FoundElement="[vElement]" sap:VirtualizedContainerService.HintSize="677,87" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_3">
      <ui:WaitUiElementAppear.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="71ac8e0a-7199-489f-90ec-aa793f710577" Selector="[sSelector]" TimeoutMS="5000">
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:WaitUiElementAppear.Target>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:WaitUiElementAppear>
    <If sap2010:Annotation.AnnotationText="why retry is not don in retry scope or in while loops ? Because every time add refernce has to be done in different X and Y Co-ordinates" Condition="[vElement.Get(&quot;aastate&quot;).ToString.Contains(&quot;unavailable&quot;)]" DisplayName="retry to add reference if element is still disabled but with different co-ordinates" sap:VirtualizedContainerService.HintSize="677,154" sap2010:WorkflowViewState.IdRef="If_3">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If.Then>
        <Sequence sap:VirtualizedContainerService.HintSize="376,1246" sap2010:WorkflowViewState.IdRef="Sequence_10">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="True" ContinueOnError="True" DisplayName="reset zoom to 101 to sroll up uppper panel" EmptyField="True" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="TypeInto_5" Text="100[k(enter)]">
            <ui:TypeInto.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fdc914d1-dd73-433f-9e1c-102010951f24" InformativeScreenshot="9a9004c0f7e08edd966fb8ff7e15f94b" Selector="&lt;wnd app='spreviewwizard.exe' ctrlname='SPVContainer' /&gt;&lt;wnd ctrlname='pnlToolbar' /&gt;&lt;wnd ctrlname='UCSPVToolbar' /&gt;&lt;wnd cls='WindowsForms10.EDIT.*' idx='2' /&gt;">
                <ui:Target.TimeoutMS>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:Target.TimeoutMS>
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:TypeInto.Target>
          </ui:TypeInto>
          <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_7" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;retry on static button&quot;]">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:LogMessage>
          <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DelayMS="2000" DisplayName="Click on static button" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="Click_4" KeyModifiers="None" MouseButton="BTN_LEFT">
            <ui:Click.CursorPosition>
              <ui:CursorPosition Position="Center">
                <ui:CursorPosition.OffsetX>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetX>
                <ui:CursorPosition.OffsetY>
                  <InArgument x:TypeArguments="x:Int32" />
                </ui:CursorPosition.OffsetY>
              </ui:CursorPosition>
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="115d6daa-8701-4082-85b5-441425dbcb68" InformativeScreenshot="d921d7902b38f88048a07c36a590e00c" Selector="[sStaticButton]" TimeoutMS="5000">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:Click.Target>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:Click>
          <ui:Click AlterIfDisabled="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DelayBefore="2000" DelayMS="2000" DisplayName="Add refrence in the upper panel in different X, Y Co-oridnates" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="Click_3" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False">
            <ui:Click.CursorPosition>
              <ui:CursorPosition OffsetX="-250" OffsetY="150" Position="TopRight" />
            </ui:Click.CursorPosition>
            <ui:Click.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="91b336df-9b8b-4929-93da-1a808426ec2f" InformativeScreenshot="822380853f01c9d20c2d3360551c7744" Selector="&lt;wnd app='spreviewwizard.exe' ctrlname='SPVContainer' /&gt;&lt;wnd ctrlname='pnlMain' /&gt;&lt;wnd ctrlname='pnlSourceDoc' /&gt;&lt;wnd ctrlname='UCSPVSourceDoc' /&gt;&lt;wnd ctrlname='PictureBox1' /&gt;" TimeoutMS="5000">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:Click.Target>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:Click>
          <ui:WaitUiElementAppear WaitActive="{x:Null}" WaitVisible="{x:Null}" ContinueOnError="True" DisplayName="Find Element" FoundElement="[vElement]" sap:VirtualizedContainerService.HintSize="334,52" sap2010:WorkflowViewState.IdRef="WaitUiElementAppear_5">
            <ui:WaitUiElementAppear.Target>
              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="71ac8e0a-7199-489f-90ec-aa793f710577" Selector="[sSelector]" TimeoutMS="5000">
                <ui:Target.WaitForReady>
                  <InArgument x:TypeArguments="ui:WaitForReady" />
                </ui:Target.WaitForReady>
              </ui:Target>
            </ui:WaitUiElementAppear.Target>
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
          </ui:WaitUiElementAppear>
          <If Condition="[vElement.Get(&quot;aastate&quot;).ToString.Contains(&quot;unavailable&quot;)]" DisplayName="retry again with differnt co-ordinates" sap:VirtualizedContainerService.HintSize="334,506" sap2010:WorkflowViewState.IdRef="If_6">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                <x:Boolean x:Key="IsPinned">False</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <If.Then>
              <Sequence sap:VirtualizedContainerService.HintSize="300,324" sap2010:WorkflowViewState.IdRef="Sequence_17">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="LogMessage_8" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;retry on static button&quot;]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:LogMessage>
                <ui:Click AlterIfDisabled="{x:Null}" DelayBefore="{x:Null}" SendWindowMessages="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DelayMS="2000" DisplayName="Click on static button" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="Click_7" KeyModifiers="None" MouseButton="BTN_LEFT">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition Position="Center">
                      <ui:CursorPosition.OffsetX>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetX>
                      <ui:CursorPosition.OffsetY>
                        <InArgument x:TypeArguments="x:Int32" />
                      </ui:CursorPosition.OffsetY>
                    </ui:CursorPosition>
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="115d6daa-8701-4082-85b5-441425dbcb68" InformativeScreenshot="d921d7902b38f88048a07c36a590e00c" Selector="[sStaticButton]" TimeoutMS="5000">
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Click>
                <ui:Click AlterIfDisabled="{x:Null}" SimulateClick="{x:Null}" ClickType="CLICK_SINGLE" ContinueOnError="True" DelayBefore="2000" DelayMS="2000" DisplayName="Add refrence in the upper panel in different X, Y Co-oridnates" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="Click_8" KeyModifiers="None" MouseButton="BTN_LEFT" SendWindowMessages="False">
                  <ui:Click.CursorPosition>
                    <ui:CursorPosition OffsetX="-300" OffsetY="200" Position="TopRight" />
                  </ui:Click.CursorPosition>
                  <ui:Click.Target>
                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="91b336df-9b8b-4929-93da-1a808426ec2f" InformativeScreenshot="822380853f01c9d20c2d3360551c7744" Selector="&lt;wnd app='spreviewwizard.exe' ctrlname='SPVContainer' /&gt;&lt;wnd ctrlname='pnlMain' /&gt;&lt;wnd ctrlname='pnlSourceDoc' /&gt;&lt;wnd ctrlname='UCSPVSourceDoc' /&gt;&lt;wnd ctrlname='PictureBox1' /&gt;" TimeoutMS="5000">
                      <ui:Target.WaitForReady>
                        <InArgument x:TypeArguments="ui:WaitForReady" />
                      </ui:Target.WaitForReady>
                    </ui:Target>
                  </ui:Click.Target>
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Click>
              </Sequence>
            </If.Then>
            <If.Else>
              <Sequence sap2010:WorkflowViewState.IdRef="Sequence_18" />
            </If.Else>
          </If>
        </Sequence>
      </If.Then>
      <If.Else>
        <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_11">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
        </Sequence>
      </If.Else>
    </If>
    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="677,141" sap2010:WorkflowViewState.IdRef="LogMessage_2" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Added reference&quot;]" />
    <ui:RetryScope ContinueOnError="True" DisplayName="Retry Scope" sap:VirtualizedContainerService.HintSize="677,2926" sap2010:WorkflowViewState.IdRef="RetryScope_1" NumberOfRetries="2" RetryInterval="00:00:05">
      <ui:RetryScope.ActivityBody>
        <ActivityAction>
          <Sequence sap:VirtualizedContainerService.HintSize="635,2637" sap2010:WorkflowViewState.IdRef="Sequence_8">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Sequence DisplayName="Action" sap:VirtualizedContainerService.HintSize="573,2526" sap2010:WorkflowViewState.IdRef="Sequence_6">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  <x:Boolean x:Key="IsPinned">False</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap2010:Annotation.AnnotationText="If element state contains collapsed then it is a dropdown otherwise a text box" Condition="[vElement.Get(&quot;aastate&quot;).ToString.Contains(&quot;collapsed&quot;) or vElement.Get(&quot;aastate&quot;).ToString.Contains(&quot;focusable&quot;)]" sap:VirtualizedContainerService.HintSize="511,2415" sap2010:WorkflowViewState.IdRef="If_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="477,1651" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:SelectItem AlterIfDisabled="{x:Null}" Items="{x:Null}" ContinueOnError="True" DelayAfter="3000" DelayBefore="3000" DisplayName="Select Item from dropdown" sap:VirtualizedContainerService.HintSize="435,52" sap2010:WorkflowViewState.IdRef="SelectItem_1" Item="[sExpectedOutput]">
                      <ui:SelectItem.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e72cbbfd-ab76-4654-9537-01a0b577a619" Selector="[sSelector]" TimeoutMS="5000">
                          <ui:Target.WaitForReady>
                            <InArgument x:TypeArguments="ui:WaitForReady" />
                          </ui:Target.WaitForReady>
                        </ui:Target>
                      </ui:SelectItem.Target>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:SelectItem>
                    <ui:GetValue ContinueOnError="True" DisplayName="Check for Mandtory value updated or not" sap:VirtualizedContainerService.HintSize="435,87" sap2010:WorkflowViewState.IdRef="GetValue_2">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8616f1c9-b347-47aa-9576-778bd14b30d1" Selector="[sSelector]" TimeoutMS="5000" WaitForReady="COMPLETE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="x:String">[sOutput]</OutArgument>
                      </ui:GetValue.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:GetValue>
                    <If Condition="[sOutput&lt;&gt;sExpectedOutput and (sExpectedOutput =&quot;111-11-1111&quot; or sExpectedOutput =&quot;11-1111111&quot; or sExpectedOutput =&quot;22-2222222&quot; or sExpectedOutput=&quot;222-22-2222&quot;)]" sap:VirtualizedContainerService.HintSize="435,1344" sap2010:WorkflowViewState.IdRef="If_4">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <If.Then>
                        <Sequence sap:VirtualizedContainerService.HintSize="401,350" sap2010:WorkflowViewState.IdRef="Sequence_12">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:SelectItem AlterIfDisabled="{x:Null}" Items="{x:Null}" ContinueOnError="True" DelayAfter="3000" DelayBefore="3000" DisplayName="Select Item from dropdown" sap:VirtualizedContainerService.HintSize="359,135" sap2010:WorkflowViewState.IdRef="SelectItem_2" Item="[sIncorrectSSNEINText]">
                            <ui:SelectItem.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e72cbbfd-ab76-4654-9537-01a0b577a619" Selector="[sSelector]" TimeoutMS="5000">
                                <ui:Target.WaitForReady>
                                  <InArgument x:TypeArguments="ui:WaitForReady" />
                                </ui:Target.WaitForReady>
                              </ui:Target>
                            </ui:SelectItem.Target>
                          </ui:SelectItem>
                          <ui:GetValue ContinueOnError="True" DisplayName="Check for Mandtory value updated or not" sap:VirtualizedContainerService.HintSize="359,87" sap2010:WorkflowViewState.IdRef="GetValue_3">
                            <ui:GetValue.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8616f1c9-b347-47aa-9576-778bd14b30d1" Selector="[sSelector]" TimeoutMS="5000" WaitForReady="COMPLETE" />
                            </ui:GetValue.Target>
                            <ui:GetValue.Value>
                              <OutArgument x:TypeArguments="x:String">[sOutput]</OutArgument>
                            </ui:GetValue.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:GetValue>
                        </Sequence>
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="376,812" sap2010:WorkflowViewState.IdRef="Sequence_13">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="False" ContinueOnError="True" DelayBefore="2000" DelayMS="2000" DisplayName="Enter new value to textbox" EmptyField="False" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="TypeInto_6" Text="[sExpectedOutput]">
                            <ui:TypeInto.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="80aef998-a3d8-43ec-b466-a59c31bde127" InformativeScreenshot="6281be1c848c4ba53aff8e2b282eb7e0" Selector="[sSelector]" WaitForReady="COMPLETE">
                                <ui:Target.TimeoutMS>
                                  <InArgument x:TypeArguments="x:Int32" />
                                </ui:Target.TimeoutMS>
                              </ui:Target>
                            </ui:TypeInto.Target>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:TypeInto>
                          <ui:GetValue ContinueOnError="True" DisplayName="Check for Mandtory value updated or not" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="GetValue_4">
                            <ui:GetValue.Target>
                              <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8616f1c9-b347-47aa-9576-778bd14b30d1" Selector="[sSelector]" TimeoutMS="5000" WaitForReady="COMPLETE" />
                            </ui:GetValue.Target>
                            <ui:GetValue.Value>
                              <OutArgument x:TypeArguments="x:String">[sOutput]</OutArgument>
                            </ui:GetValue.Value>
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                          </ui:GetValue>
                          <If Condition="[sOutput&lt;&gt;sExpectedOutput]" sap:VirtualizedContainerService.HintSize="334,402" sap2010:WorkflowViewState.IdRef="If_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                <x:Boolean x:Key="IsPinned">False</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <If.Then>
                              <Sequence sap:VirtualizedContainerService.HintSize="300,140" sap2010:WorkflowViewState.IdRef="Sequence_19">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:SelectItem AlterIfDisabled="{x:Null}" Items="{x:Null}" ContinueOnError="True" DelayAfter="3000" DelayBefore="3000" DisplayName="Select Item from dropdown" sap:VirtualizedContainerService.HintSize="258,52" sap2010:WorkflowViewState.IdRef="SelectItem_3" Item="[sExpectedOutput]">
                                  <ui:SelectItem.Target>
                                    <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="e72cbbfd-ab76-4654-9537-01a0b577a619" Selector="[sSelector]" TimeoutMS="5000">
                                      <ui:Target.WaitForReady>
                                        <InArgument x:TypeArguments="ui:WaitForReady" />
                                      </ui:Target.WaitForReady>
                                    </ui:Target>
                                  </ui:SelectItem.Target>
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">False</x:Boolean>
                                      <x:Boolean x:Key="IsPinned">False</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:SelectItem>
                              </Sequence>
                            </If.Then>
                            <If.Else>
                              <Sequence sap:VirtualizedContainerService.HintSize="300,80" sap2010:WorkflowViewState.IdRef="Sequence_20">
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                              </Sequence>
                            </If.Else>
                          </If>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap:VirtualizedContainerService.HintSize="376,551" sap2010:WorkflowViewState.IdRef="Sequence_5">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:TypeInto AlterIfDisabled="{x:Null}" DelayBetweenKeys="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" ClickBeforeTyping="False" ContinueOnError="True" DelayBefore="2000" DelayMS="2000" DisplayName="Enter new value to textbox" EmptyField="False" sap:VirtualizedContainerService.HintSize="334,155" sap2010:WorkflowViewState.IdRef="TypeInto_2" Text="[sExpectedOutput]">
                      <ui:TypeInto.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="80aef998-a3d8-43ec-b466-a59c31bde127" InformativeScreenshot="6281be1c848c4ba53aff8e2b282eb7e0" Selector="[sSelector]" WaitForReady="COMPLETE">
                          <ui:Target.TimeoutMS>
                            <InArgument x:TypeArguments="x:Int32" />
                          </ui:Target.TimeoutMS>
                        </ui:Target>
                      </ui:TypeInto.Target>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:TypeInto>
                    <ui:GetValue ContinueOnError="True" DisplayName="Check for Mandtory value updated or not" sap:VirtualizedContainerService.HintSize="334,87" sap2010:WorkflowViewState.IdRef="GetValue_1">
                      <ui:GetValue.Target>
                        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="8616f1c9-b347-47aa-9576-778bd14b30d1" Selector="[sSelector]" TimeoutMS="5000" WaitForReady="COMPLETE" />
                      </ui:GetValue.Target>
                      <ui:GetValue.Value>
                        <OutArgument x:TypeArguments="x:String">[sOutput]</OutArgument>
                      </ui:GetValue.Value>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          <x:Boolean x:Key="IsPinned">False</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:GetValue>
                    <ui:LogMessage DisplayName="Log Message" sap:VirtualizedContainerService.HintSize="334,141" sap2010:WorkflowViewState.IdRef="LogMessage_6" Level="[UiPath.Core.Activities.LogLevel.Info]" Message="[&quot;Updated text value as:&quot;+ sOutput]" />
                  </Sequence>
                </If.Else>
              </If>
            </Sequence>
          </Sequence>
        </ActivityAction>
      </ui:RetryScope.ActivityBody>
      <ui:RetryScope.Condition>
        <ActivityFunc x:TypeArguments="x:Boolean">
          <ui:CheckTrue DisplayName="Check True" ErrorMessage="Failed to update value to mandatory field " Expression="[sExpectedOutput=sOutput]" sap:VirtualizedContainerService.HintSize="334,129" sap2010:WorkflowViewState.IdRef="CheckTrue_1" />
        </ActivityFunc>
      </ui:RetryScope.Condition>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:RetryScope>
    <ui:TypeInto DelayBefore="{x:Null}" DelayBetweenKeys="{x:Null}" DelayMS="{x:Null}" SendWindowMessages="{x:Null}" SimulateType="{x:Null}" Activate="True" AlterIfDisabled="True" ClickBeforeTyping="True" ContinueOnError="True" DisplayName="reset zoom to 101 to sroll up uppper panel" EmptyField="True" sap:VirtualizedContainerService.HintSize="677,155" sap2010:WorkflowViewState.IdRef="TypeInto_4" Text="100[k(enter)]">
      <ui:TypeInto.Target>
        <ui:Target ClippingRegion="{x:Null}" Element="{x:Null}" Id="fdc914d1-dd73-433f-9e1c-102010951f24" InformativeScreenshot="9a9004c0f7e08edd966fb8ff7e15f94b" Selector="&lt;wnd app='spreviewwizard.exe' ctrlname='SPVContainer' /&gt;&lt;wnd ctrlname='pnlToolbar' /&gt;&lt;wnd ctrlname='UCSPVToolbar' /&gt;&lt;wnd cls='WindowsForms10.EDIT.*' idx='2' /&gt;">
          <ui:Target.TimeoutMS>
            <InArgument x:TypeArguments="x:Int32" />
          </ui:Target.TimeoutMS>
          <ui:Target.WaitForReady>
            <InArgument x:TypeArguments="ui:WaitForReady" />
          </ui:Target.WaitForReady>
        </ui:Target>
      </ui:TypeInto.Target>
    </ui:TypeInto>
  </Sequence>
</Activity>